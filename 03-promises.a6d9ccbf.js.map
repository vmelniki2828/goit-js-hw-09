{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,mBAChCC,EAAUF,SAASC,cAAc,SA0DvC,SAASE,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GACvBL,EACFI,EAAQ,CAACN,WAAUC,UAInBM,EAAO,CAACP,WAAUC,S,IAhExBN,EAAOa,iBAAiB,SAExB,SAAyBC,GACzBA,EAAIC,iBACJ,IAAMC,EAAW,IAAIC,SAASd,GAC1Be,EAAQC,OAAOH,EAASI,IAAI,UAC1BC,EAAOF,OAAOH,EAASI,IAAI,SAC3BE,EAASH,OAAOH,EAASI,IAAI,WAC/BG,EAAW,EAGfC,YAAW,WAGTpB,EAAcmB,EAAUL,GACnBO,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBqB,QAAQC,IAAI,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,OAC1DR,EAAAgC,OAAOC,QAAQ,uBAAwCF,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAE9D0B,OAAM,SAAAN,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAElBqB,QAAQC,IAAI,sBAAuCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,OACzDR,EAAAgC,OAAOG,QAAQ,sBAAuCJ,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAE9DY,GAASG,EAGb,IAAIa,EAAaC,aAAY,WAE3B,GAAIZ,EAAWD,EAeb,OAXAlB,EAFAmB,GAAY,EAEYL,GACvBO,MAAK,SAAAC,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MACjBqB,QAAQC,IAAI,uBAAwCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,OAC1DR,EAAAgC,OAAOC,QAAQ,uBAAwCF,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,IAE9D0B,OAAM,SAAAN,G,IAAGrB,EAAQqB,EAARrB,SAAUC,EAAKoB,EAALpB,MAElBqB,QAAQC,IAAI,sBAAuCC,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,OACzDR,EAAAgC,OAAOG,QAAQ,sBAAqCJ,OAAfxB,EAAS,QAAYwB,OAANvB,EAAM,M,SAE5DY,GAASG,GAGXe,cAAcF,E,GAEdb,E,GAGFH,E","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst btnRef = document.querySelector('.js-promise-btn');\nconst formRef = document.querySelector('.form');\n\nbtnRef.addEventListener('click', onCreatePromise);\n\nfunction onCreatePromise(evt) {\nevt.preventDefault();\nconst formData = new FormData(formRef);\nlet delay = Number(formData.get(\"delay\"));\nconst step = Number(formData.get(\"step\"));\nconst amount = Number(formData.get(\"amount\"));\nlet position = 1;\n\n\nsetTimeout(()=>{\n\n\n  createPromise(position, delay) //First promise\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n  \n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      })\n      delay += step;\n\n\n  let intervalId = setInterval(()=>{\n\n    if (position < amount)\n    {\n      position += 1;\n      \n      createPromise(position, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n  \n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      })\n      delay += step;\n      return;\n    }\n    clearInterval(intervalId);\n  \n  },step)\n}\n\n, delay)\n\n\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject)=> {\n    if (shouldResolve) {\n      resolve({position, delay});\n      // Fulfill\n      \n    } else {\n      reject({position, delay});\n      // Reject\n    }\n  })\n  \n}"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$btnRef","document","querySelector","$ce04d3a99e08e73b$var$formRef","$ce04d3a99e08e73b$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","addEventListener","evt","preventDefault","formData","FormData","delay1","Number","get","step","amount","position1","setTimeout","then","param","console","log","concat","Notify","success","catch","failure","intervalId","setInterval","clearInterval"],"version":3,"file":"03-promises.a6d9ccbf.js.map"}